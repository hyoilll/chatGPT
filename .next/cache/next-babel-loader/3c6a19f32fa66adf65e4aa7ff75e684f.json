{"ast":null,"code":"var _jsxFileName = \"E:\\\\web\\\\chatGPT\\\\pages\\\\index.js\";\nimport AppLayout from \"../component/AppLayout\";\nimport { Input } from \"antd\";\n//import * as dotenv from \"dotenv\";\nimport { Configuration, OpenAIApi } from \"openai\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  const {\n    0: model,\n    1: setModel\n  } = useState(\"gpt-3.5-turbo\");\n\n  // dotenv.config();\n  // const configuration = new Configuration({\n  //   apiKey: process.env.OPENAI_API_KEY,\n  // });\n  // const openai = new OpenAIApi(configuration);\n\n  // async function ask(content, model) {\n  //   const res = await openai.createChatCompletion({\n  //     model: model,\n  //     messages: [{ role: \"user\", content: content }],\n  //   });\n\n  //   const answer = res.data.choices[0].message?.content;\n  //   console.log(answer);\n  // }\n\n  const onSearch = value => {\n    // ask(value, model);\n  };\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    version: \"3.5-turbo\",\n    children: [/*#__PURE__*/_jsxDEV(Input.Search, {\n      placeholder: \"input search text\",\n      onSearch: onSearch,\n      allowClear: true,\n      enterButton: \"Search\",\n      size: \"large\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input.TextArea, {\n      rows: 4,\n      placeholder: \"Responses from GPT will be displayed here.\",\n      readOnly: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\nexport default Home;","map":{"version":3,"names":["AppLayout","Input","Configuration","OpenAIApi","useState","jsxDEV","_jsxDEV","Home","model","setModel","onSearch","value","version","children","Search","placeholder","allowClear","enterButton","size","fileName","_jsxFileName","lineNumber","columnNumber","TextArea","rows","readOnly"],"sources":["E:/web/chatGPT/pages/index.js"],"sourcesContent":["import AppLayout from \"../component/AppLayout\";\r\nimport { Input } from \"antd\";\r\n//import * as dotenv from \"dotenv\";\r\nimport { Configuration, OpenAIApi } from \"openai\";\r\nimport { useState } from \"react\";\r\n\r\nconst Home = () => {\r\n  const [model, setModel] = useState(\"gpt-3.5-turbo\");\r\n\r\n  // dotenv.config();\r\n  // const configuration = new Configuration({\r\n  //   apiKey: process.env.OPENAI_API_KEY,\r\n  // });\r\n  // const openai = new OpenAIApi(configuration);\r\n\r\n  // async function ask(content, model) {\r\n  //   const res = await openai.createChatCompletion({\r\n  //     model: model,\r\n  //     messages: [{ role: \"user\", content: content }],\r\n  //   });\r\n\r\n  //   const answer = res.data.choices[0].message?.content;\r\n  //   console.log(answer);\r\n  // }\r\n\r\n  const onSearch = (value) => {\r\n    // ask(value, model);\r\n  };\r\n\r\n  return (\r\n    <AppLayout version=\"3.5-turbo\">\r\n      <Input.Search\r\n        placeholder=\"input search text\"\r\n        onSearch={onSearch}\r\n        allowClear\r\n        enterButton=\"Search\"\r\n        size=\"large\"\r\n      ></Input.Search>\r\n      <Input.TextArea\r\n        rows={4}\r\n        placeholder=\"Responses from GPT will be displayed here.\"\r\n        readOnly\r\n      ></Input.TextArea>\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":";AAAA,OAAOA,SAAS,MAAM,wBAAwB;AAC9C,SAASC,KAAK,QAAQ,MAAM;AAC5B;AACA,SAASC,aAAa,EAAEC,SAAS,QAAQ,QAAQ;AACjD,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EACjB,MAAM;IAAA,GAACC,KAAK;IAAA,GAAEC;EAAQ,IAAIL,QAAQ,CAAC,eAAe,CAAC;;EAEnD;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA,MAAMM,QAAQ,GAAIC,KAAK,IAAK;IAC1B;EAAA,CACD;EAED,oBACEL,OAAA,CAACN,SAAS;IAACY,OAAO,EAAC,WAAW;IAAAC,QAAA,gBAC5BP,OAAA,CAACL,KAAK,CAACa,MAAM;MACXC,WAAW,EAAC,mBAAmB;MAC/BL,QAAQ,EAAEA,QAAS;MACnBM,UAAU;MACVC,WAAW,EAAC,QAAQ;MACpBC,IAAI,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE,eAChBhB,OAAA,CAACL,KAAK,CAACsB,QAAQ;MACbC,IAAI,EAAE,CAAE;MACRT,WAAW,EAAC,4CAA4C;MACxDU,QAAQ;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACQ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACR;AAEhB,CAAC;AAED,eAAef,IAAI"},"metadata":{},"sourceType":"module"}